<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1"/>
<meta http-equiv="Cache-Control" content="max-age=3600"/>
<meta name="description" content="description"/>
<meta name="keywords" content="keywords"/> 
<meta name="author" content="author"/> 
<link rel="stylesheet" type="text/css" href="../style/default.css" media="screen"/>
<title>FastQTL</title>
<script language="Javascript" src="../script/print_last_modif_date.js" ></script>
</head>

<body>
<div class="content">
	<div class="item"  id="cis_out1">
		<h1>Concatenating output files</h1>
		<p>
		Once the analysis completed and all output file collected, you can easily concat and compress all files into a single output file to ease downstream analysis with:
		</p>
		
		<code>
		cat *.results | gzip -c > whole_analysis.results.gz
		</code>
		
		<p>
		Or if all files have been compressed:
		</p>
		
		<code>
		zcat *.results | gzip -c > whole_analysis.results.gz
		</code>		
	</div>
	
	<div class="item"  id="cis_out2">
		<h1>Output file format of a <b>nominal</b> pass</h1>
		<p>
		After having performed a nominal pass on the data and concatenating the output files, you end up with a file with 5 columns and N lines corresponding to all N molecular phenotypes - variant pairs tested.
		For instance, if you tested 1,000 molecular phenotypes and for each there is 1,000 variants in cis, it means that you'll get 1,000,000 lines in the output files.
		Hereafter a short example: 
		</p>
		
		<code>
		ENSG00000171766.10 snp_15_44704653 -989763 0.039 0.878829<br>
		ENSG00000171766.10 snp_15_45694318 -98 0.210 0.00897252<br>
		ENSG00000171766.10 snp_15_45694516 100 0.212 0.00824187<br>
		ENSG00000171766.10 snp_15_45694579 163 0.210 0.0090015<br>
		ENSG00000171766.10 snp_15_46033857 339441 0.044 0.660939<br>
		ENSG00000085449.10 snp_2_223824537 -985567 0.099 0.27398<br>
		ENSG00000085449.10 snp_2_224804819 -5285 3.631 0.0691091<br>
		ENSG00000085449.10 snp_2_224900373 90269 -0.033 0.677188<br>
		</code>
		
		<p>
		In this file, the 5 columns correspond to:
		<ol>
			<li>ID of the tested molecular phenotype (in this particular case, the gene ID)</li>
			<li>ID of the tested variant (in this case a SNP)</li>
			<li>Distance between the tested pair molecular phenotype - variant</li>
			<li>The regression coefficient of the linear regression</li>
			<li>The nominal p-value of association that quantifies how significant from 0, the regression coefficient is</li>
		</ol>
		</p>
	</div>

	<div class="item"  id="cis_out2">
		<h1>Output file format of a <b>permutation</b> pass</h1>
		<p>
		After having performed a permutation pass on the data and concatenating the output files, you end up with a file with 7 columns and M lines with M being the total number of tested molecular phenotypes.
		For instance, if you tested 1,000 molecular phenotypes, it means that you'll get 1,000 lines in the output files.
		Hereafter a short example: 
		</p>
		
		<code>
		ENSG00000243224.1 snp_3_52481406 208132 -0.653 7.22484e-08 0.000999001 8.40335e-05
		ENSG00000164088.13 snp_3_53153349 873508 -39.177 0.000549583 0.563437 0.585561
		ENSG00000168237.12 snp_3_52637486 316381 -0.310 3.10728e-05 0.035964 0.0431493
		ENSG00000164091.7 snp_3_52818070 496034 -32.302 0.000277238 0.382617 0.388194
		ENSG00000114841.11 snp_3_52322417 -27918 0.280 0.000657804 0.553447 0.571003
		ENSG00000010318.13 indel:1D_3_53150625 707115 -1.125 0.000100418 0.124875 0.136732
		ENSG00000163930.5 snp_3_53189309 744943 21.638 0.000247269 0.268731 0.280288
		ENSG00000114854.3 snp_3_53475648 987562 0.769 0.000647341 0.615385 0.625944
		</code>
	
		<p>
		In this file, the 7 columns correspond to:
		<ol>
			<li>ID of the tested molecular phenotype (in this particular case, the gene ID)</li>
			<li>ID of the best variant found for this molecular phenotypes (i.e. with the strongest correlation)</li>
			<li>Distance between the molecular phenotype - variant pair</li>
			<li>The regression coefficient of the linear regression</li>
			<li>The <b>nominal</b> p-value of association that quantifies how significant from 0, the regression coefficient is</li>
			<li>A first <b>permutation</b> p-value directly obtained from the permutations with the standard method (cf. paper). This is basically a corrected version of the nominal p-value that accounts for the fact that multiple variants are tested per molecular phenotype.
			<li>A second <b>permutation</b> p-value obtained via beta approximation (cf. paper). We advice to use this one in any downstream analysis.
		</ol>
		</p>
	</div>
	
	
	<div class="item"  id="cis_out3">
		<h1>Controlling for multiple-testing</h1>
		<p>
		Once obtained all permutation p-values for all the tested molecular phenotypes, we need to account for the fact that many molecular phenotypes are tested whole genome in order to determine the significant QTLs.
		To do so, we propose here 3 approaches; from the most to the least stringent. 
		First, load the data in R using:
		</p>
		
		<code>
		<b>R></b> d = read.table("whole_analysis.results.gz")
		<b>R></b> colnames(d) = c("mp", "variant", "cisdistance", "beta", "nominal_pval", "permutation_pval", "beta_pval")
		</code>
		
		<br>
		<h3>Bonferroni correction</h3>
		<p>
		Look <a href="http://en.wikipedia.org/wiki/Bonferroni_correction">here</a> for some details on the correction and <a href="https://stat.ethz.ch/R-manual/R-devel/library/stats/html/p.adjust.html">here</a> for some details on the R function used in this example.
		To apply the Bonferroni correction on the permutation p-values derived from beta approximation, use:   
		</p>
		
		<code>
		<b>R></b> d$bonferroni = p.adjust(d$beta_pval, method="bonferroni")
		</code>
		
		<p>
		Then, you can extract all significant MP-QTL pairs at &alpha;=0.05 and write them to a file <b>whole_analysis.bonferroni.results</b> using:
		</p>
		
		<code>
		<b>R></b> write.table(d[which(d$bonferroni <= 0.05), c(1,2)], "whole_analysis.bonferroni.results", quote=F, row.names=F, col.names=F)
		</code>
		
		<br>
		<h3>Benjamini & Hochberg correction</h3>
		<p>
		Look <a href="http://en.wikipedia.org/wiki/False_discovery_rate">here</a> for some details on the correction and <a href="https://stat.ethz.ch/R-manual/R-devel/library/stats/html/p.adjust.html">here</a> for some details on the R function used in this example. 
		To apply the Benjamini & Hochberg correction on the permutation p-values derived from beta approximation, use:   
		</p>
		
		<code>
		<b>R></b> d$bh = p.adjust(d$beta_pval, method="fdr")
		</code>
		
		<p>
		Then, you can extract all significant MP-QTL pairs with a 10% false discovery rate (FDR) for instance and write them to a file <b>whole_analysis.benjamini.results</b> using:
		</p>

		<code>
		<b>R></b> write.table(d[which(d$bh <= 0.10), c(1,2)], "whole_analysis.benjamini.results", quote=F, row.names=F, col.names=F)
		</code>
		
		<br>
		<h3>Storey & Tibshirani correction</h3>
		<p>
		Look <a href="http://en.wikipedia.org/wiki/False_discovery_rate">here</a> for some details on the correction and <a href="http://svitsrv25.epfl.ch/R-doc/library/qvalue/html/qvalue.html">here</a> for some details on the R function used in this example.
		To install the R/qvalue package on your system, look <a href="http://www.bioconductor.org/packages/release/bioc/html/qvalue.html">here</a>. 
		Then to apply the Storey & Tibshirani correction on the permutation p-values derived from beta approximation, use:   
		</p>
		
		<code>
		<b>R></b> library(qvalue)
		<b>R></b> d$st = qvalue(d$beta_pval)$qvalues
		</code>
				
		<p>
		Then, you can extract all significant MP-QTL pairs with a 10% false discovery rate (FDR) for instance and write them to a file <b>whole_analysis.storey.results</b> using:
		</p>

		<code>
		<b>R></b> write.table(d[which(d$st <= 0.10), c(1,2)], "whole_analysis.storey.results", quote=F, row.names=F, col.names=F)
		</code>
		
	</div>
	
	<div class="log"><script type="text/javascript"> print_last_modif_date("$Date$"); </script></div>
</div>
</body>
</html>